{"ast":null,"code":"var _jsxFileName = \"/Users/lloyd/Desktop/Rest-Countries-API/src/pages/Home/Home.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Search from \"../../components/Search/Search\";\nimport { regionFetch, fetchAll, searchFetch } from \"../../data/rest\";\nimport CountryWidget from \"../../components/CountryWidget/CountryWidget\";\nimport Loading from \"../../components/Loading/Loading\";\n\nconst Home = () => {\n  //Loaded countries\n  const [countries, setCountries] = useState([]);\n  const [pagCountries, setPagCountries] = useState([]);\n  const loadMoreRef = useRef(null);\n  const [pageNo, setPageNo] = useState(12);\n  useEffect(() => {\n    // window.addEventListener('scroll', ()=>{\n    //   console.log(loadMoreRef.current.getBoundingClientRect().y, window.innerHeight)\n    //   if(loadMoreRef.current.getBoundingClientRect().y < window.innerHeight){\n    //     s\n    //     loadMore();\n    //     // console.log('run')\n    //   }\n    // })\n    fetchAllCountries();\n    paginationInit();\n  }, []);\n  useEffect(() => {\n    setPageNo(12);\n    setPagCountries([]);\n    paginationInit();\n  }, [countries]); //Init load\n\n  const fetchAllCountries = () => {\n    fetchAll().then(data => {\n      return data;\n    }).then(data => {\n      setCountries(data);\n    });\n  }; //Runs on search\n\n\n  const searchFunction = input => {\n    const searchedFound = searchFetch(input).then(data => {\n      return data;\n    }).then(data => {\n      setCountries(data);\n    });\n  }; //Runs on region select\n\n\n  const regionSelect = region => {\n    setCountries(regionFetch(region).then(data => {\n      return data;\n    }).then(data => {\n      setCountries(data);\n    }));\n  };\n\n  const paginationInit = () => {\n    if (countries.length > 12) {\n      let page = countries.slice(0, 12);\n      setPagCountries(page);\n    } else {\n      setPagCountries(countries);\n    }\n  };\n\n  const loadMore = () => {\n    //increase pageNo by 12\n    setPageNo(pageNo + 12); //Add ten to pagCountries\n\n    setPagCountries(pagCountries.concat(countries.splice(pageNo, pageNo + 12))); // console.log(pagCountries, 'run');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"homeContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Search, {\n    search: searchFunction,\n    reset: fetchAllCountries,\n    fetch: regionSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"countryWidgetContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, !Array.isArray(pagCountries) ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }) : pagCountries.map(country => {\n    return React.createElement(CountryWidget, {\n      key: country.name,\n      data: country,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: \"loadMore\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"loadMore__button\",\n    onClick: loadMore,\n    ref: loadMoreRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Load more\")));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/lloyd/Desktop/Rest-Countries-API/src/pages/Home/Home.js"],"names":["React","useState","useEffect","useRef","Search","regionFetch","fetchAll","searchFetch","CountryWidget","Loading","Home","countries","setCountries","pagCountries","setPagCountries","loadMoreRef","pageNo","setPageNo","fetchAllCountries","paginationInit","then","data","searchFunction","input","searchedFound","regionSelect","region","length","page","slice","loadMore","concat","splice","Array","isArray","map","country","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Search from \"../../components/Search/Search\";\nimport { regionFetch, fetchAll, searchFetch } from \"../../data/rest\";\nimport CountryWidget from \"../../components/CountryWidget/CountryWidget\";\nimport Loading from \"../../components/Loading/Loading\";\n\nconst Home = () => {\n  //Loaded countries\n  const [countries, setCountries] = useState([]);\n  const [pagCountries, setPagCountries] = useState([]);\n\n  const loadMoreRef = useRef(null);\n\n  const [pageNo, setPageNo] = useState(12);\n\n  useEffect(() => {\n    // window.addEventListener('scroll', ()=>{\n    //   console.log(loadMoreRef.current.getBoundingClientRect().y, window.innerHeight)\n    //   if(loadMoreRef.current.getBoundingClientRect().y < window.innerHeight){\n    //     s\n    //     loadMore();\n    //     // console.log('run')\n    //   }\n    // })\n    fetchAllCountries();\n    paginationInit();\n  }, []);\n\n  useEffect(() => {\n    setPageNo(12);\n    setPagCountries([]);\n    paginationInit();\n  }, [countries]);\n\n  //Init load\n  const fetchAllCountries = () => {\n    fetchAll()\n      .then((data) => {\n        return data;\n      })\n      .then((data) => {\n        setCountries(data);\n      });\n  };\n  //Runs on search\n  const searchFunction = (input) => {\n    const searchedFound = searchFetch(input)\n      .then((data) => {\n        return data;\n      })\n      .then((data) => {\n        setCountries(data);\n      });\n  };\n  //Runs on region select\n  const regionSelect = (region) => {\n    setCountries(\n      regionFetch(region)\n        .then((data) => {\n          return data;\n        })\n        .then((data) => {\n          setCountries(data);\n        })\n    );\n  };\n\n  const paginationInit = () => {\n    if (countries.length > 12) {\n      let page = countries.slice(0, 12);\n      setPagCountries(page);\n    } else {\n      setPagCountries(countries);\n    }\n  };\n\n  const loadMore = () => {\n    //increase pageNo by 12\n    setPageNo(pageNo + 12);\n    //Add ten to pagCountries\n    setPagCountries(pagCountries.concat(countries.splice(pageNo, pageNo + 12)));\n    // console.log(pagCountries, 'run');\n  };\n\n  return (\n    <div className=\"homeContainer\">\n      <Search\n        search={searchFunction}\n        reset={fetchAllCountries}\n        fetch={regionSelect}\n      />\n      <div className=\"countryWidgetContainer\">\n        {!Array.isArray(pagCountries) ? (\n          <Loading />\n        ) : (\n          pagCountries.map((country) => {\n            return <CountryWidget key={country.name} data={country} />;\n          })\n        )}\n      </div>\n      <div className=\"loadMore\">\n        <p className=\"loadMore__button\" onClick={loadMore} ref={loadMoreRef}>\n          Load more\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}